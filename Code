import java.util.*;

public class SherlockAndPermutations {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            String pattern = sc.next();
            String text = sc.next();
            int[] patternFreq = getFrequencyArray(pattern);
            int[] windowFreq = new int[26];
            boolean found = false;
            for (int i = 0; i < text.length(); i++) {
                windowFreq[text.charAt(i) - 'a']++;
                if (i >= pattern.length()) {
                    windowFreq[text.charAt(i - pattern.length()) - 'a']--;
                }
                if (i >= pattern.length() - 1) {
                    if (Arrays.equals(patternFreq, windowFreq)) {
                        found = true;
                        break;
                    }
                }
            }
            System.out.println(found ? "YES" : "NO");
        }
        sc.close();
    }

    private static int[] getFrequencyArray(String str) {
        int[] freq = new int[26];
        for (int i = 0; i < str.length(); i++) {
            freq[str.charAt(i) - 'a']++;
        }
        return freq;
    }
}
